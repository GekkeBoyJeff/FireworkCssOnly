:root{
    
    --background: #040327;
--menuBackground: #1a191a;
}

* {
    margin: 0;
    padding: 0;
    border: none;
    font-family: math;
}

body {
    height: 100dvh;
    display: flex;
    overflow: hidden;
    background-color: var(--background);
}

body:after{
    content:'';
    position: absolute;
    top: -1em;
    right: -4em;
    background: #c9c9c9;
    box-shadow: 0 0 2em #616161;
    width: 12em;
    aspect-ratio:1;
    border-radius: 50%;
    z-index: -1;
}

form {
    width: 100dvw;
    height: 100vh;
}

input {
    display: none;
}

label:hover {
    cursor: pointer;
}

/* Menu on the left */
body>form:first-of-type fieldset:first-of-type {
    display: flex;
    height: 100%;
    flex-wrap: wrap;
    width: 20em;
    background-color: var(--menuBackground);
    gap: 1em;
    padding: 1em;
    align-content: start;
    transform: translateX(-25em);
    z-index: 2;
    max-width:70%;
}

body>form:first-of-type fieldset:first-of-type label {
    background-color: var(--background);
    color: white;
    flex: 1 1 22%;
    text-align: center;
    padding: 2em 1em;
    align-self: center;
    border-radius: .4em;
    transition: .5s;
}

body>form:first-of-type fieldset:first-of-type label:nth-of-type(n+2) {
    filter: brightness(4.5);
}

form:has(> fieldset:first-of-type > input:nth-of-type(2):checked)>fieldset:nth-of-type(1) label:nth-of-type(2) {
    box-shadow: 0 0 0.5em 0 black inset;
    background: hsl(198deg 67% 54%);
}

body>form:has(> fieldset:first-of-type > input:nth-of-type(2):checked)>fieldset:first-of-type label:nth-of-type(2)::before {
    content: 'âœ…';
}

body>form:first-of-type fieldset:first-of-type label:hover {
    transform: scale(1.05);
    text-decoration: underline;
    font-weight: 700;
}

/* Changes width of the content once the menu has been folded open */
form:has(> fieldset:first-of-type > input:first-of-type:checked)>fieldset:nth-of-type(n+3) {
    width: 36.5em;
    top: 90%;
    height: 95%;
    margin-top: 4em;
    right: 1.5em;
    border-radius: .5em;
}

/* Menu on the left folded open */
form:has(> fieldset:first-of-type > input:first-of-type:checked)>fieldset:first-of-type {
    transform: translateX(0);
}

/* Left side button */
/* Resizes the label and allows you to click through it */
form:has(> fieldset:first-of-type > input:first-of-type:checked)>fieldset:first-of-type>label:first-of-type {
    pointer-events: none;
    height: 3.3em;
    background-color: var(--menuBackground);
    z-index: -1;
    width: 9em;
    left: 15em;
}

/* Because it is relative, it is directly in the middle, hence top -23.7em */
body>form:first-of-type fieldset:first-of-type label:first-of-type {
    position: relative;
    order: 1;
    top: -23.7em;
    padding: 0;
    flex: unset;
    height: 3.3em;
    border-radius: .2em;
    left: 18em;
    width: 11em;
    background-color: unset;
    color: transparent;
    text-align: right;
}

/* Move the after 'button' to the top left and set the text to Firework */
body>form:first-of-type fieldset:first-of-type label:first-of-type::before {
    content: 'Firework';
    background-color: var(--menuBackground);
    color: var(--background);
    font-family: system-ui;
    font-weight: 700;
    padding: 1em;
    position: absolute;
    border-radius: 0 .5em .5em 0;
    left: 0em;
    pointer-events: all;
    transform: translateX(6em);
    transition: 1s;
    z-index: -6;
}

/* location and size of the expand button changes. This button is the styling for the expand button */
/* Also changes the text to an X */
body>form:has(> fieldset:first-of-type > input:first-of-type:checked)>fieldset:first-of-type label:first-of-type::before {
    content: 'X';
    color: var(--background);
    background-color: var(--menuBackground);
    transform: translateX(3em);
    transition: .5s;
    width: 8em;
    left: -4em;
}

/* Expand Button main styling */
body>form:first-of-type>label {
    position: absolute;
    background-color: red;
    padding: 1em;
    border-radius: .4em;
    bottom: 1em;
    z-index: 4;
}

/* Menu onderneith the viewport */
/* position is set 100% down and styled */
form>fieldset:nth-of-type(2) {
    display: flex;
    align-items: center;
    gap: 1em;
    height: 5em;
    width: 100vw;
    background: var(--menuBackground);
    left: 0;
    z-index: 3;
    justify-content: end;
    position: fixed;
    bottom: 0;
    transform: translateY(100%);
}

/* Textboxes styling */
form>fieldset:nth-of-type(2) label input {
    width: 100%;
    height: 100%;
    background: white;
    display: unset;
    font-size: 3.5em;
    text-align: center;
    font-family: system-ui;
    font-variant: unicase;
}

/* Resize the labels */
form>fieldset:nth-of-type(2)>label {
    width: 3em;
    height: 3em;
}

/* Positioning and styling the button on the left */
form>fieldset:nth-of-type(2)>label:first-of-type {
    position: relative;
    left: 2em;
    bottom: 4em;
    background: var(--menuBackground);
    border-radius: .5em .5em 0 0;
    text-align: center;
    display: flex;
    align-items: center;
    flex-direction: row;
    height: 3em;
    width: 3em;
    font-size: 1em;
    color: transparent;
    margin-right: auto;
}

form:has(>fieldset:nth-of-type(1)>input:first-of-type:checked)>fieldset:nth-of-type(2)>label:first-of-type {
    border: .09em solid var(--background);
}

/* hide the menu down by default */
form:has(>fieldset:nth-of-type(2)>input:first-of-type:checked)>fieldset:nth-of-type(2) {
    transform: translateY(0em);
    box-shadow: 0 0 .5em var(--background);
}

/* Change text in the label by placing the after */
form>fieldset:nth-of-type(2)>label:first-of-type::after {
    content: '^';
    color: var(--background);
    font-weight: bold;
    font-size: 3em;
    position: relative;
    top: .2em;
    transition: .5s;
    order: -1;
    margin-left: .2em;
}

/* Animation for flipping the arrow */
form:has(>fieldset:nth-of-type(2)>input:first-of-type:checked)>fieldset:nth-of-type(2)>label:first-of-type::after {
    top: -0.1em;
    transform-origin: .28em;
    transform: scaleY(-1);
}

/* flip first firework layer up */
form:has(> fieldset:first-of-type > input:nth-of-type(2):checked)>fieldset:nth-of-type(3) {
    transform: translateY(-100%);
}

form:has(> fieldset:first-of-type > input:nth-of-type(3):checked)>fieldset:nth-of-type(4) {
    background-color: brown;
    transform: translateY(-100%);
}

form>fieldset:nth-of-type(n+3) {
    opacity: .5;
}

form>fieldset:nth-of-type(n+3) {
    position: absolute;
    width: 100vw;
    top: 100%;
}

form:has(> fieldset:first-of-type > input:nth-of-type(4):checked)>fieldset:nth-of-type(5) {
    background-color: greenyellow;
    transform: translateY(-100%);
}

form:has(> fieldset:first-of-type > input:nth-of-type(5):checked)>fieldset:nth-of-type(6) {
    background-color: aqua;
    transform: translateY(-100%);
}

form:has(> fieldset:first-of-type > input:nth-of-type(6):checked)>fieldset:nth-of-type(7) {
    background-color: azure;
    transform: translateY(-100%);
}

form:has(> fieldset:first-of-type > input:nth-of-type(7):checked)>fieldset:nth-of-type(8) {
    background-color: blue;
    transform: translateY(-100%);
}

form:has(> fieldset:first-of-type > input:nth-of-type(8):checked)>fieldset:nth-of-type(9) {
    background-color: blueviolet;
    transform: translateY(-100%);
}

form:has(> fieldset:first-of-type > input:nth-of-type(9):checked)>fieldset:nth-of-type(10) {
    background-color: burlywood;
    transform: translateY(-100%);
}

form:has(> input:last-of-type:checked)>fieldset:nth-of-type(2) {
    transform: translateY(0em);
}

fieldset {
    z-index: -1;
    transition: .5s;
    position: relative;
    height: 0;
    height: 100dvh;
}

form>fieldset:nth-of-type(2) label:last-of-type {
    padding-right: 1em;
}


/* First animation */

form:has(> fieldset:first-of-type > input:nth-of-type(2):checked)>fieldset:nth-of-type(3)>div:first-of-type,
form:has(> fieldset:first-of-type > input:nth-of-type(2):checked)>fieldset:nth-of-type(3)>div:first-of-type::before,
form:has(> fieldset:first-of-type > input:nth-of-type(2):checked)>fieldset:nth-of-type(3)>div:first-of-type::after,
form:has(> fieldset:first-of-type > input:nth-of-type(2):checked)>fieldset:nth-of-type(3)>div:nth-of-type(2),
form:has(> fieldset:first-of-type > input:nth-of-type(2):checked)>fieldset:nth-of-type(3)>div:nth-of-type(2)::before,
form:has(> fieldset:first-of-type > input:nth-of-type(2):checked)>fieldset:nth-of-type(3)>div:nth-of-type(2)::after,
form:has(> fieldset:first-of-type > input:nth-of-type(2):checked)>fieldset:nth-of-type(3)>div:nth-of-type(3),
form:has(> fieldset:first-of-type > input:nth-of-type(2):checked)>fieldset:nth-of-type(3)>div:nth-of-type(3)::before,
form:has(> fieldset:first-of-type > input:nth-of-type(2):checked)>fieldset:nth-of-type(3)>div:nth-of-type(3)::after {
    content: '';
    --colorDeg: 60deg;
    --color: hsl(var(--colorDeg) 100% 50%);
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    aspect-ratio: 1;
    background: radial-gradient(circle, var(--color) .2em, #0000 0) 50% 00%,
        radial-gradient(circle, var(--color) .3em, #0000 0) 00% 25%,
        radial-gradient(circle, var(--color) .5em, #0000 0) 15% 45%,
        radial-gradient(circle, var(--color) .2em, #0000 0) 95% 45%,
        radial-gradient(circle, var(--color) .3em, #0000 0) 5% 70%,
        radial-gradient(circle, var(--color) .5em, #0000 0) 65% 85%,
        radial-gradient(circle, var(--color) .2em, #0000 0) 25% 85%,
        radial-gradient(circle, var(--color) .3em, #0000 0) 85% 65%,
        radial-gradient(circle, var(--color) .5em, #0000 0) 75% 25%,
        radial-gradient(circle, var(--color) .2em, #0000 0) 90% 15%;
    background-size: 0.2em 0.2em;
    background-repeat: no-repeat;
    animation: firework 2s infinite;
    border-radius: .5em;
}

form:has(> fieldset:first-of-type > input:nth-of-type(2):checked)>fieldset:nth-of-type(3)>div::before {
    transform: translate(-50%, -50%) rotate(45deg) !important;
    --colorDeg: 30deg;
}

form:has(> fieldset:first-of-type > input:nth-of-type(2):checked)>fieldset:nth-of-type(3)>div::after {
    transform: translate(-50%, -50%) rotate(-27deg) !important;
    --colorDeg: 10deg;
}

@keyframes firework {
    0% {
        transform: translateY(60vh);
        opacity: 1;
    }

    50% {
        width: 0.3em;
        opacity: 1;
    }

    100% {
        width: 50dvw;
        opacity: 0;
    }
}

form:has(> fieldset:first-of-type > input:nth-of-type(2):checked)>fieldset:nth-of-type(3)>div:nth-of-type(2),
form:has(> fieldset:first-of-type > input:nth-of-type(2):checked)>fieldset:nth-of-type(3)>div:nth-of-type(2)::before,
form:has(> fieldset:first-of-type > input:nth-of-type(2):checked)>fieldset:nth-of-type(3)>div:nth-of-type(2)::after {
    left: 20%;
    bottom: 20%;
    animation-delay: .5s;
    --colorDeg: 80deg;
    --color: hsl(var(
    --colorDeg) 100% 50%);
}
form:has(> fieldset:first-of-type > input:nth-of-type(2):checked)>fieldset:nth-of-type(3)>div:nth-of-type(3),
form:has(> fieldset:first-of-type > input:nth-of-type(2):checked)>fieldset:nth-of-type(3)>div:nth-of-type(3)::before,
form:has(> fieldset:first-of-type > input:nth-of-type(2):checked)>fieldset:nth-of-type(3)>div:nth-of-type(3)::after {
    left: 80%;
    top: 40%;
    animation-delay: 1.2s;
    --colorDeg: 20deg;
    --color: hsl(var(
    --colorDeg) 100% 50%);
    transform: translate(-50%, -50%) rotate(45deg);
}

@media (prefers-color-scheme: light) {
    :root{
        --background: #94e1ec;
    }
    body>form:first-of-type fieldset:first-of-type label:nth-of-type(n+2){
        filter:unset;
    --background: #3bc2d8;
    }
    form:has(> fieldset:first-of-type > input:nth-of-type(2):checked)>fieldset:nth-of-type(1) label:nth-of-type(2){
        /* background:var(--background); */
    }
    body::before{
        color:black;
        content:"it's a bit light in here, isn't it?, try the dark mode";
        position: absolute;
        z-index: 0;
        width: 100%;
        text-align: center;
        top: 1em;
    }
    body:after{
        content:'';
        position: absolute;
        top: -1em;
        right: -4em;
        background:yellow;
        box-shadow: 0 0 2em yellow;
        width: 12em;
        aspect-ratio:1;
        border-radius: 50%;
        z-index: -1;
    }
}
@media (prefers-color-scheme: dark) {
    body>form:has(> fieldset:first-of-type > input:first-of-type:checked)>fieldset:first-of-type label:first-of-type::before, form>fieldset:nth-of-type(2)>label:first-of-type, body>form:first-of-type fieldset:first-of-type label:first-of-type::before{
        --background: #0f08ef;
    }
    form:has(> fieldset:first-of-type > input:nth-of-type(2):checked)>fieldset:nth-of-type(1) label:nth-of-type(2){
        filter:unset;
    }
}

@media(max-width:400px){
    form:has(> fieldset:first-of-type > input:first-of-type:checked)>fieldset:first-of-type>label:first-of-type{
        left: 10em;
    }
}